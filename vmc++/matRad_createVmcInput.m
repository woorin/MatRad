function matRad_createVmcInput(VmcOptions,filename)
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% matRad vmc++ inputfile creation
%
% call
%   matRad_createVmcInput(VmcOptions,filename)
%
% input
%   VmcOptions:     structure set with VMC options
%   filename:       full file name of generated vmc input file (has to be 
%                   located in the runs path in the vmc++ folder)
%
%
% References
%   
%
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


% check for monoenergy option
if ~isempty(VmcOptions.beamletSource.monoEnergy) && VmcOptions.beamletSource.monoEnergy>0
    monoEnergyLine = ['      mono energy = ' num2str(VmcOptions.beamletSource.monoEnergy)];
else
    monoEnergyLine = [];
end 

VmcInput = {...
    ['  :start beamlet source:      '                                                                                    ]   ,...%1 source
    ['      my name = ' VmcOptions.beamletSource.myName                                                               ]   ,...
    ['      monitor units ' VmcOptions.beamletSource.myName ' = ' num2str(VmcOptions.beamletSource.monitorUnits)   ]   ,...
    monoEnergyLine,...
    ['      spectrum = ' VmcOptions.beamletSource.spectrum                                                             ]   ,...
    ['      charge       = ' num2str(VmcOptions.beamletSource.charge)                                                  ]   ,...
    ['      beamlet edges = ' num2str(VmcOptions.beamletSource.beamletEdges, '%8.5f ')                                ]   ,...
    ['      virtual point source position = ' num2str(VmcOptions.beamletSource.virtualPointSourcePosition, '%8.5f ')]   ,...
    ['  :stop beamlet source:       '                                                                                    ]   ,...
    ['                              '                                                                                    ]   ,...
    ['  :start MC Parameter:        '                                           ]   ,...%2 transport parameter
    ['      automatic parameter = ' VmcOptions.McParameter.automatic_parameter]   ,...
    ['  :stop MC Parameter:         '                                           ]   ,...
    ['                              '                                           ]   ,...
    ['  :start MC Control:          '                              ]   ,...%3 MC control
    ['      ncase  = ' num2str(VmcOptions.McControl.ncase)       ]   ,...
    ['      nbatch = ' num2str(VmcOptions.McControl.nbatch)      ]   ,...
    ['      rng seeds = ' num2str(VmcOptions.McControl.rngSeeds)]   ,...
    ['  :stop MC Control:           '                              ]   ,...
    ['                              '                              ]   ,...
    ['  :start variance reduction:  '                                                          ]   ,...%4 variance reduction
    ['      repeat history   = ' num2str(VmcOptions.varianceReduction.repeatHistory)        ]   ,...
    ['      split photons = ' num2str(VmcOptions.varianceReduction.splitPhotons)            ]   ,...
    ['      photon split factor = ' num2str(VmcOptions.varianceReduction.photonSplitFactor)]   ,...
    ['  :stop variance reduction: '                                                            ]   ,...
    ['                              '                                                          ]   ,...
    ['  :start quasi:  '                                      ]   ,...%5 quasi random numbers
    ['      base      = ' num2str(VmcOptions.quasi.base)     ]   ,...
    ['      dimension = ' num2str(VmcOptions.quasi.dimension)]   ,...
    ['      skip      = ' num2str(VmcOptions.quasi.skip)     ]   ,...
    ['  :stop quasi:    '                                     ]   ,...
    ['                              '                         ]   ,...
    ['  :start geometry:            '                                                ]   ,...%6 geometry
    ['      :start XYZ geometry:    '                                                ]   ,...
    ['          my name = ' VmcOptions.geometry.XyzGeometry.Ct                ]   ,...
    ['          method of input = ' VmcOptions.geometry.XyzGeometry.methodOfInput]   ,...
    ['          phantom file    = ' VmcOptions.geometry.XyzGeometry.CtFile   ]   ,...
    ['      :stop XYZ geometry:     '                                                ]   ,...
    ['  :stop geometry:             '                                                ]   ,...
    ['                              '                                                ]   ,...
    ['  :start scoring options:'                                                                               ]   ,...%7 scoring manager
    ['      start in geometry: ' VmcOptions.scoringOptions.startInGeometry                                 ]   ,...
    ['      :start dose options:  '                                                                            ]   ,...
    ['          score in geometries: ' VmcOptions.scoringOptions.doseOptions.scoreInGeometries            ]   ,...
    ['          score dose to water: ' VmcOptions.scoringOptions.doseOptions.scoreDoseToWater            ]   ,...
    ['      :stop dose options:     '                                                                          ]   ,...
    ['      :start output options ' VmcOptions.scoringOptions.outputOptions.name ':'                        ]   ,...
    ['          dump dose:  ' num2str(VmcOptions.scoringOptions.outputOptions.dumpDose)                    ]   ,...
    ['      :stop output options ' VmcOptions.scoringOptions.outputOptions.name  ':'                        ]   ,...
    ['  :stop scoring options:      '                                                                          ]
    };

% write input file
fid = fopen(filename,'wt');
for i = 1 : length(VmcInput)
  fprintf(fid,'%s\n',VmcInput{i});
end
fclose(fid);

end